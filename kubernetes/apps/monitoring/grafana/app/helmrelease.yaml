---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: grafana
spec:
  interval: 30m
  chartRef:
    kind: OCIRepository
    name: grafana
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    deploymentStrategy:
      type: Recreate
    annotations:
      reloader.stakater.com/auto: "true"
    replicas: 1
    env:
      GF_DATE_FORMATS_USE_BROWSER_LOCALE: true
      GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH: /tmp/dashboards/home.json
      GF_EXPLORE_ENABLED: true
      GF_LOG_MODE: console
      GF_FEATURE_TOGGLES_ENABLE: publicDashboards
      GF_PLUGINS_ALLOW_LOADING_UNSIGNED_PLUGINS: natel-discrete-panel,pr0ps-trackmap-panel,panodata-map-panel
      GF_SECURITY_COOKIE_SAMESITE: grafana
      GF_SECURITY_ANGULAR_SUPPORT_ENABLED: true
      GF_SERVER_ROOT_URL: https://grafana.kinzoku.dev
    imageRenderer:
      enabled: true
    grafana.ini:
      database:
        type: postgres
        ssl_mode: require
        host: $__file{/etc/secrets/grafana_pg_app/host}
        name: $__file{/etc/secrets/grafana_pg_app/dbname}
        user: $__file{/etc/secrets/grafana_pg_app/username}
        password: $__file{/etc/secrets/grafana_pg_app/password}
      analytics:
        check_for_updates: false
        check_for_plugin_updates: false
        reporting_enabled: false
      auth:
        oauth_auto_login: true
        signout_redirect_url: $__file{/etc/secrets/grafana_auth/GRAFANA_SIGNOUT_REDIRECT_URL}
      auth.generic_oauth:
        enabled: true
        name: "kinzokudev auth"
        scopes: "openid profile email groups"
        empty_scopes: false
        login_attribute_path: preferred_username
        groups_attribute_path: groups
        name_attribute_path: name
        client_id: $__file{/etc/secrets/grafana_auth/GRAFANA_OAUTH_CLIENT_ID}
        client_secret: $__file{/etc/secrets/grafana_auth/GRAFANA_OAUTH_CLIENT_SECRET}
        auth_url: $__file{/etc/secrets/grafana_auth/GRAFANA_OAUTH_AUTH_URL}
        token_url: $__file{/etc/secrets/grafana_auth/GRAFANA_OAUTH_TOKEN_URL}
        api_url: $__file{/etc/secrets/grafana_auth/GRAFANA_OAUTH_API_URL}
      auth.generic_oauth.group_mapping:
        org_id: 1
        role_attribute_path: |
          contains(groups[*], 'Role-Grafana-Admin') && 'GrafanaAdmin' || contains(groups[*], 'Role-Grafana-Viewer') && 'Viewer'
      # auth:
      #   oauth_auto_login: true
      #   oauth_allow_insecure_email_lookup: true
      # auth.generic_oauth:
      #   enabled: true
      #   name: Authelia
      #   icon: signin
      #   scopes: openid profile email groups
      #   empty_scopes: false
      #   login_attribute_path: preferred_username
      #   groups_attribute_path: groups
      #   name_attribute_path: name
      #   use_pkce: true
      # auth.generic_oauth.group_mapping:
      #   org_id: 1
      #   role_attribute_path: contains(groups[*], 'admins') && 'Admin' || 'Viewer'
      auth.basic:
        enabled: false
        disable_login_form: true
      auth.anonymous:
        enabled: false
      news:
        news_feed_enabled: false
    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
          - name: default
            orgId: 1
            folder: ""
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/default-folder
          - name: data
            orgId: 1
            folder: Data
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/data-folder
          - name: flux
            orgId: 1
            folder: Flux
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/flux-folder
          - name: kubernetes
            orgId: 1
            folder: Kubernetes
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/kubernetes-folder
          - name: network
            orgId: 1
            folder: Network
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/network-folder
          - name: storage
            orgId: 1
            folder: Storage
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/storage-folder
          - name: system
            orgId: 1
            folder: System
            type: file
            disableDeletion: false
            editable: true
            allowUiUpdates: true
            options:
              path: /var/lib/grafana/dashboards/system-folder
          - name: victoriametrics
            orgId: 1
            folder: VictoriaMetrics
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboard/VictoriaMetrics
    datasources:
      datasources.yaml:
        apiVersion: 1
        deleteDatasources:
          - name: Alertmanager
            orgId: 1
          - name: Prometheus
            orgId: 1
        datasources:
          - name: Prometheus
            type: prometheus
            uid: prometheus
            isDefault: true
            access: proxy
            url: http://vmsingle-victoria.monitoring.svc.cluster.local:8429
            jsonData:
              prometheusType: Prometheus
          - name: Alertmanager
            type: alertmanager
            uid: alertmanager
            isDefault: false
            access: proxy
            url: http://alertmanager-local.monitoring.svc.cluster.local:9093
            jsonData:
              implementation: prometheus
    dashboards:
      default:
        # miniflux:
        #   url: https://raw.githubusercontent.com/miniflux/v2/main/contrib/grafana/dashboard.json
        #   datasource: Prometheus
      data:
        dragonfly:
          url: https://raw.githubusercontent.com/dragonflydb/dragonfly/refs/heads/main/tools/local/monitoring/grafana/provisioning/dashboards/dragonfly.json
          datasource: Prometheus
        external-secrets:
          url: https://raw.githubusercontent.com/external-secrets/external-secrets/main/docs/snippets/dashboard.json
          datasource: Prometheus
        zfs:
          # renovate: depName="ZFS"
          gnetId: 7845
          revision: 4
          datasource: Prometheus
      network:
        blackbox-exporter:
          # renovate: depName="Prometheus Blackbox Exporter"
          gnetId: 7587
          revision: 3
          datasource: Prometheus
        cert-manager:
          # renovate: depName="Cert-manager-Kubernetes"
          gnetId: 20842
          revision: 3
          datasource: Prometheus
        cloudflared:
          # renovate: depName="Cloudflare Tunnels (cloudflared)"
          gnetId: 17457
          revision: 6
          datasource:
            - name: DS_PROMETHEUS
              value: Prometheus
        external-dns:
          # renovate: depName="External-dns"
          gnetId: 15038
          revision: 3
          datasource: Prometheus
        nginx:
          url: https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/grafana/dashboards/nginx.json
          datasource: Prometheus
        nginx-request-handling-performance:
          url: https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/grafana/dashboards/request-handling-performance.json
          datasource: Prometheus
      flux:
        flux-cluster:
          url: https://raw.githubusercontent.com/fluxcd/flux2-monitoring-example/main/monitoring/configs/dashboards/cluster.json
          datasource: Prometheus
        flux-control-plane:
          url: https://raw.githubusercontent.com/fluxcd/flux2-monitoring-example/main/monitoring/configs/dashboards/control-plane.json
          datasource: Prometheus
        flux-logs:
          url: https://raw.githubusercontent.com/fluxcd/flux2-monitoring-example/main/monitoring/configs/dashboards/logs.json
          datasource: Prometheus
      kubernetes:
        kubernetes-api-server:
          # renovate: depName="Kubernetes / System / API Server"
          gnetId: 15761
          revision: 16
          datasource: Prometheus
        kubernetes-coredns:
          # renovate: depName="Kubernetes / System / CoreDNS"
          gnetId: 15762
          revision: 18
          datasource: Prometheus
        kubernetes-global:
          # renovate: depName="Kubernetes / Views / Global"
          gnetId: 15757
          revision: 37
          datasource: Prometheus
        kubernetes-namespaces:
          # renovate: depName="Kubernetes / Views / Namespaces"
          gnetId: 15758
          revision: 34
          datasource: Prometheus
        kubernetes-nodes:
          # renovate: depName="Kubernetes / Views / Nodes"
          gnetId: 15759
          revision: 29
          datasource: Prometheus
        kubernetes-pods:
          # renovate: depName="Kubernetes / Views / Pods"
          gNetId: 15760
          revision: 21
          datasource: Prometheus
        kubernetes-volumes:
          # renovate: depName="K8s / Storage / Volumes / Cluster"
          gnetId: 11454
          revision: 14
          datasource: Prometheus
      storage:
        etcd-storage:
          # renovate: depName="etcd"
          gnetId: 22236
          revision: 1
          datasource:
            - { name: DS_VICTORIAMETRICS, value: Prometheus }
        minio:
          # renovate: depName="MinIO Dashboard"
          gnetId: 13502
          revision: 26
          datasource:
            - name: DS_PROMETHEUS
              value: Prometheus
      system:
        node-exporter-full:
          # renovate: depName="Node Exporter Full"
          gnetId: 1860
          revision: 39
          datasource: Prometheus
        smartctl-exporter:
          # renovate: depName="SMARTctl Exporter Dashboard"
          gnetId: 22604
          revision: 1
          datasource:
            - name: DS_PROMETHEUS
              value: Prometheus
        spegel:
          # renovate: depName="Spegel"
          gnetId: 18089
          revision: 1
          datasource:
            - name: DS_PROMETHEUS
              value: Prometheus
        node-feature-discovery:
          url: https://raw.githubusercontent.com/kubernetes-sigs/node-feature-discovery/master/examples/grafana-dashboard.json
          datasource: Prometheus
    sidecar:
      dashboards:
        enabled: true
        searchNamespace: ALL
        label: grafana_dashboard
        folderAnnotation: grafana_folder
        provider:
          disableDelete: true
          foldersFromFilesStructure: true
      datasources:
        enabled: true
        searchNamespace: ALL
        labelValue: ""
    plugins:
      - grafana-clock-panel
      - grafana-piechart-panel
      - grafana-worldmap-panel
      - natel-discrete-panel
      - pr0ps-trackmap-panel
      - vonage-status-panel
    serviceMonitor:
      enabled: true
    ingress:
      enabled: true
      ingressClassName: external
      annotations:
        external-dns.alpha.kubernetes.io/target: external.${SECRET_DOMAIN}
      hosts: [grafana.kinzoku.dev]
    persistence:
      enabled: false
    rbac:
      pspEnabled: false
    serviceAccount:
      create: true
      autoMount: true
    resources:
      limits:
        memory: 512Mi
      requests:
        cpu: 25m
        memory: 128Mi
    testFramework:
      enabled: false
    topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: DoNotSchedule
        labelSelector:
          matchLabels:
            app.kubernetes.io/name: grafana
    extraSecretMounts:
      - name: grafana-pg-app-secret-mount
        secretName: grafana-pg-app
        defaultMode: 0440
        mountPath: /etc/secrets/grafana_pg_app
        readOnly: true
      - name: grafana-auth-secret-mount
        secretName: grafana-auth-secret
        defaultMode: 0440
        mountPath: /etc/secrets/grafana_auth
        readOnly: true
